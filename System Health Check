# System-HealthCheck.ps1

Write-Host "=== SYSTEM HEALTH REPORT ===" -ForegroundColor Cyan
Write-Host "Generated on: $(Get-Date)" -ForegroundColor Gray
Write-Host ""

# =======================
# ‚úÖ Memory Usage
# =======================
Write-Host "‚ñ∂ MEMORY USAGE" -ForegroundColor Green
$os = Get-CimInstance Win32_OperatingSystem
$totalMem = [math]::Round($os.TotalVisibleMemorySize / 1MB, 2)
$freeMem = [math]::Round($os.FreePhysicalMemory / 1MB, 2)
$usedMem = [math]::Round($totalMem - $freeMem, 2)
$percentUsed = [math]::Round(($usedMem / $totalMem) * 100, 2)

Write-Output "  Total Memory : $totalMem GB"
Write-Output "  Used Memory  : $usedMem GB ($percentUsed`%)"
Write-Output "  Free Memory  : $freeMem GB"
Write-Host ""

# =======================
# üíæ Disk Space
# =======================
Write-Host "‚ñ∂ DISK SPACE" -ForegroundColor Green
Get-PSDrive -PSProvider FileSystem | ForEach-Object {
    $total = [math]::Round(($_.Used + $_.Free) / 1GB, 2)
    $used = [math]::Round($_.Used / 1GB, 2)
    $free = [math]::Round($_.Free / 1GB, 2)
    $percentFree = [math]::Round(($_.Free / ($_.Used + $_.Free)) * 100, 2)

    Write-Output "  Drive $_.Name:"
    Write-Output "    Total Space : $total GB"
    Write-Output "    Used Space  : $used GB"
    Write-Output "    Free Space  : $free GB ($percentFree`% free)"
}
Write-Host ""

# =======================
# ‚è±Ô∏è System Uptime
# =======================
Write-Host "‚ñ∂ SYSTEM UPTIME" -ForegroundColor Green
$bootTime = (Get-CimInstance Win32_OperatingSystem).LastBootUpTime
$uptime = (Get-Date) - $bootTime

Write-Output "  Last Boot : $bootTime"
Write-Output "  Uptime    : $([int]$uptime.TotalDays) days, $uptime.Hours hours, $uptime.Minutes minutes"
Write-Host ""

Write-Host "=== END OF REPORT ===" -ForegroundColor Cyan
